;; Analyzed by ClojureScript 1.8.51
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client.heads-up, :imports nil, :requires {string clojure.string, clojure.string clojure.string, socket figwheel.client.socket, figwheel.client.socket figwheel.client.socket, async cljs.core.async, cljs.core.async cljs.core.async, goog.string goog.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, map< cljs.core.async, put! cljs.core.async}, :defs {get-content {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 85, :column 7, :end-line 85, :end-column 18, :arglists (quote ([{:keys [content-area-el]}]))}, :name figwheel.client.heads-up/get-content, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([p__27820]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [content-area-el]}]))}, remove-file-from-message {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 237, :column 7, :end-line 237, :end-column 31, :arglists (quote ([{:keys [message file], :as ex}]))}, :name figwheel.client.heads-up/remove-file-from-message, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 31, :method-params ([p__27936]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [message file], :as ex}]))}, file-and-line-number {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 133, :column 7, :end-line 133, :end-column 27, :arglists (quote ([msg]))}, :name figwheel.client.heads-up/file-and-line-number, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, parse-analysis-error {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 192, :column 7, :end-line 192, :end-column 27, :arglists (quote ([{:keys [exception-data], :as ex}]))}, :name figwheel.client.heads-up/parse-analysis-error, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([p__27896]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [exception-data], :as ex}]))}, parse-reader-error {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 207, :column 7, :end-line 207, :end-column 25, :arglists (quote ([{:keys [exception-data], :as ex}]))}, :name figwheel.client.heads-up/parse-reader-error, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 25, :method-params ([p__27907]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [exception-data], :as ex}]))}, display-exception {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 282, :column 7, :end-line 282, :end-column 24, :arglists (quote ([exception-data]))}, :name figwheel.client.heads-up/display-exception, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 24, :method-params ([exception-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 1, :fn-var true, :arglists (quote ([exception-data]))}, exception-info? {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 177, :column 7, :end-line 177, :end-column 22, :arglists (quote ([ex]))}, :name figwheel.client.heads-up/exception-info?, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 22, :method-params ([ex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ex]))}, set-style! {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 76, :column 7, :end-line 76, :end-column 17, :arglists (quote ([{:keys [container-el]} st-map]))}, :name figwheel.client.heads-up/set-style!, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([p__27806 st-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [container-el]} st-map]))}, heading {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 115, :column 7, :end-line 115, :end-column 14, :arglists (quote ([s] [s sub-head])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s sub-head]), :arglists ([s] [s sub-head]), :arglists-meta (nil nil)}}, :name figwheel.client.heads-up/heading, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s sub-head]), :arglists ([s] [s sub-head]), :arglists-meta (nil nil)}, :method-params ([s] [s sub-head]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists ([s] [s sub-head])}, clear {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 348, :column 7, :end-line 348, :end-column 12, :arglists (quote ([]))}, :name figwheel.client.heads-up/clear, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 348, :end-line 348, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, escape {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 251, :column 7, :end-line 251, :end-column 13, :arglists (quote ([x]))}, :name figwheel.client.heads-up/escape, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-dataset {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([el]))}, :name figwheel.client.heads-up/get-dataset, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, flatten-exception {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 172, :column 7, :end-line 172, :end-column 24, :arglists (quote ([ex]))}, :name figwheel.client.heads-up/flatten-exception, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 24, :method-params ([ex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ex]))}, display-heads-up {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 101, :column 7, :end-line 101, :end-column 23, :arglists (quote ([style msg]))}, :name figwheel.client.heads-up/display-heads-up, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([style msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([style msg]))}, display-error {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 148, :column 7, :end-line 148, :end-column 20, :arglists (quote ([formatted-messages cause]))}, :name figwheel.client.heads-up/display-error, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 20, :method-params ([formatted-messages cause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([formatted-messages cause]))}, patch-eof-reader-exception {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 221, :column 7, :end-line 221, :end-column 33, :arglists (quote ([{:keys [reader-exception message], :as ex}]))}, :name figwheel.client.heads-up/patch-eof-reader-exception, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 33, :method-params ([p__27918]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [reader-exception message], :as ex}]))}, format-line {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 142, :column 7, :end-line 142, :end-column 18, :arglists (quote ([msg]))}, :name figwheel.client.heads-up/format-line, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, heads-up-event-dispatch {:name figwheel.client.heads-up/heads-up-event-dispatch, :file "resources/public/js/figwheel/client/heads_up.cljs", :line 19, :column 1, :end-line 19, :end-column 34, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 19, :column 11, :end-line 19, :end-column 34}}, heads-up-onclick-handler {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 36, :column 7, :end-line 36, :end-column 31, :arglists (quote ([event]))}, :name figwheel.client.heads-up/heads-up-onclick-handler, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 31, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event]))}, append-message {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 342, :column 7, :end-line 342, :end-column 21, :arglists (quote ([message]))}, :name figwheel.client.heads-up/append-message, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, set-content! {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 82, :column 7, :end-line 82, :end-column 19, :arglists (quote ([{:keys [content-area-el], :as c} dom-str]))}, :name figwheel.client.heads-up/set-content!, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([p__27815 dom-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [content-area-el], :as c} dom-str]))}, display-warning {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 339, :column 7, :end-line 339, :end-column 22, :arglists (quote ([msg]))}, :name figwheel.client.heads-up/display-warning, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 339, :end-line 339, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg]))}, file-selector-div {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 137, :column 7, :end-line 137, :end-column 24, :arglists (quote ([file-name line-number msg]))}, :name figwheel.client.heads-up/file-selector-div, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 24, :method-params ([file-name line-number msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 3, :fn-var true, :arglists (quote ([file-name line-number msg]))}, display-loaded-start {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 362, :column 7, :end-line 362, :end-column 27, :arglists (quote ([]))}, :name figwheel.client.heads-up/display-loaded-start, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ensure-container {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 42, :column 7, :end-line 42, :end-column 23, :arglists (quote ([]))}, :name figwheel.client.heads-up/ensure-container, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, node {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([t attrs & children])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(t attrs children)], :arglists ([t attrs & children]), :arglists-meta (nil)}}, :name figwheel.client.heads-up/node, :variadic true, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(t attrs children)], :arglists ([t attrs & children]), :arglists-meta (nil)}, :method-params [(t attrs children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists ([t attrs & children])}, exception->display-data {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 254, :column 7, :end-line 254, :end-column 30, :arglists (quote ([{:keys [failed-compiling reader-exception analysis-exception class file line column message], :as exception}]))}, :name figwheel.client.heads-up/exception->display-data, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 30, :method-params ([p__27943]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [failed-compiling reader-exception analysis-exception class file line column message], :as exception}]))}, parse-failed-compile {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 179, :column 7, :end-line 179, :end-column 27, :arglists (quote ([{:keys [exception-data], :as ex}]))}, :name figwheel.client.heads-up/parse-failed-compile, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([p__27891]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [exception-data], :as ex}]))}, parse-exception {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 242, :column 7, :end-line 242, :end-column 22, :arglists (quote ([exception-data]))}, :name figwheel.client.heads-up/parse-exception, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 22, :method-params ([exception-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :end-line 242, :max-fixed-arity 1, :fn-var true, :arglists (quote ([exception-data]))}, cljs-logo-svg {:name figwheel.client.heads-up/cljs-logo-svg, :file "resources/public/js/figwheel/client/heads_up.cljs", :line 376, :column 1, :end-line 376, :end-column 19, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 376, :column 6, :end-line 376, :end-column 19}}, ensure-file-line {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 230, :column 7, :end-line 230, :end-column 23, :arglists (quote ([{:keys [exception-data], :as ex}]))}, :name figwheel.client.heads-up/ensure-file-line, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([p__27925]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [exception-data], :as ex}]))}, display-system-warning {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 334, :column 7, :end-line 334, :end-column 29, :arglists (quote ([header msg]))}, :name figwheel.client.heads-up/display-system-warning, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 29, :method-params ([header msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 2, :fn-var true, :arglists (quote ([header msg]))}, close-link {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 88, :column 7, :end-line 88, :end-column 17, :arglists (quote ([]))}, :name figwheel.client.heads-up/close-link, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ancestor-nodes {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 29, :column 7, :end-line 29, :end-column 21, :arglists (quote ([el]))}, :name figwheel.client.heads-up/ancestor-nodes, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, flash-loaded {:protocol-inline nil, :meta {:file "/home/xuelin/dev/view/resources/public/js/figwheel/client/heads_up.cljs", :line 370, :column 7, :end-line 370, :end-column 19, :arglists (quote ([]))}, :name figwheel.client.heads-up/flash-loaded, :variadic false, :file "resources/public/js/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 370, :end-line 370, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:figwheel-event clojure.lang.ExceptionInfo :content-area-el :cause :borderRadius :reader-exception :else :paddingBottom :paddingTop :default :last-message :paddingRight :file :width :recur :type :paddingLeft :container-el :failed-compiling :column :style :div :head :messages :line :cljs/analysis-error :opacity :id :class :analysis-exception :padding :file-name :tag :exception-data :hierarchy :backgroundColor :minHeight :sub-head :file-line :message :height :data}, :order [:hierarchy :default :figwheel-event :file-name :file-line :div :id :style :container-el :content-area-el :paddingTop :paddingBottom :width :minHeight :opacity :height :recur :else :file :line :column :backgroundColor :cause :class clojure.lang.ExceptionInfo :exception-data :message :failed-compiling :data :tag :cljs/analysis-error :analysis-exception :type :reader-exception :head :sub-head :messages :last-message :padding :borderRadius :paddingLeft :paddingRight]}, :doc nil}